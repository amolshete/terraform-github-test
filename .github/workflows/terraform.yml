
name: 'Terraform-Plan'

on:
  push:
    branches: [ "master" ]
  pull_request:

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        #cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: |
        aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws configure set region ap-south-1
        terraform plan -input=false
    - name: Debug Info
      run: |
        echo "GitHub Ref: ${{ github.ref }}"
        echo "GitHub Event Name: ${{ github.event_name }}"

    - name: Upload Terraform Configuration
      uses: actions/upload-artifact@v2
      with:
        name: terraform-config
        path: terraform-config
        
  # manual-approval:
  #     needs: terraform
  #     runs-on: ubuntu-latest

     
      
  #     steps:
  #       - name: Manual Approval
  #         id: approval
  #         run: echo "Approve or reject the Terraform plan manually"
          
  # terraform-apply:
  #   needs: manual-approval
  #   #if: github.ref == 'refs/heads/master' && github.event_name == 'workflow_run'
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Set up Terraform
  #     uses: hashicorp/setup-terraform@v1
  #     with:
  #       terraform_version: 0.14.7
    
  #   - name: Checkout
  #     uses: actions/checkout@v3
      
  #   - name: Terraform Init
  #     run: terraform init

  #   - name: Terraform Apply
  #     if: github.ref == 'refs/heads/master' && github.event_name == 'push'
  #     run: |
  #       aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
  #       aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #       aws configure set region ap-south-1
  #       terraform apply -auto-approve -input=false
      
      
    
